// Generated TypeScript types for Supabase database
// This file will be auto-generated by `supabase gen types typescript`

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      artists: {
        Row: {
          id: string
          name: string
          image_url: string | null
          genres: string[] | null
          popularity: number | null
          spotify_url: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          name: string
          image_url?: string | null
          genres?: string[] | null
          popularity?: number | null
          spotify_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          image_url?: string | null
          genres?: string[] | null
          popularity?: number | null
          spotify_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: []
      }
      albums: {
        Row: {
          id: string
          name: string
          artist_id: string
          image_url: string | null
          release_date: string | null
          total_tracks: number | null
          spotify_url: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          name: string
          artist_id: string
          image_url?: string | null
          release_date?: string | null
          total_tracks?: number | null
          spotify_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          artist_id?: string
          image_url?: string | null
          release_date?: string | null
          total_tracks?: number | null
          spotify_url?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "albums_artist_id_fkey"
            columns: ["artist_id"]
            isOneToOne: false
            referencedRelation: "artists"
            referencedColumns: ["id"]
          }
        ]
      }
      profiles: {
        Row: {
          id: string
          username: string | null
          display_name: string | null
          avatar_url: string | null
          spotify_id: string | null
          spotify_display_name: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          username?: string | null
          display_name?: string | null
          avatar_url?: string | null
          spotify_id?: string | null
          spotify_display_name?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          username?: string | null
          display_name?: string | null
          avatar_url?: string | null
          spotify_id?: string | null
          spotify_display_name?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      rankings: {
        Row: {
          id: string
          user_id: string
          title: string
          description: string | null
          is_public: boolean | null
          ranking_type: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          title: string
          description?: string | null
          is_public?: boolean | null
          ranking_type: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          title?: string
          description?: string | null
          is_public?: boolean | null
          ranking_type?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "rankings_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      ranking_items: {
        Row: {
          id: string
          ranking_id: string
          item_id: string
          position: number
          notes: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          ranking_id: string
          item_id: string
          position: number
          notes?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          ranking_id?: string
          item_id?: string
          position?: number
          notes?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "ranking_items_ranking_id_fkey"
            columns: ["ranking_id"]
            isOneToOne: false
            referencedRelation: "rankings"
            referencedColumns: ["id"]
          }
        ]
      }
      follows: {
        Row: {
          id: string
          follower_id: string
          following_id: string
          created_at: string
        }
        Insert: {
          id?: string
          follower_id: string
          following_id: string
          created_at?: string
        }
        Update: {
          id?: string
          follower_id?: string
          following_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "follows_follower_id_fkey"
            columns: ["follower_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "follows_following_id_fkey"
            columns: ["following_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      ranking_likes: {
        Row: {
          id: string
          user_id: string
          ranking_id: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          ranking_id: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          ranking_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "ranking_likes_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ranking_likes_ranking_id_fkey"
            columns: ["ranking_id"]
            isOneToOne: false
            referencedRelation: "rankings"
            referencedColumns: ["id"]
          }
        ]
      }
      ranking_comments: {
        Row: {
          id: string
          user_id: string
          ranking_id: string
          content: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          ranking_id: string
          content: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          ranking_id?: string
          content?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "ranking_comments_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ranking_comments_ranking_id_fkey"
            columns: ["ranking_id"]
            isOneToOne: false
            referencedRelation: "rankings"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Convenience type exports
export type Artist = Database['public']['Tables']['artists']['Row']
export type Album = Database['public']['Tables']['albums']['Row']
export type Profile = Database['public']['Tables']['profiles']['Row']
export type Ranking = Database['public']['Tables']['rankings']['Row']
export type RankingItem = Database['public']['Tables']['ranking_items']['Row']
export type Follow = Database['public']['Tables']['follows']['Row']
export type RankingLike = Database['public']['Tables']['ranking_likes']['Row']
export type RankingComment = Database['public']['Tables']['ranking_comments']['Row']

// Insert types
export type ArtistInsert = Database['public']['Tables']['artists']['Insert']
export type AlbumInsert = Database['public']['Tables']['albums']['Insert']
export type ProfileInsert = Database['public']['Tables']['profiles']['Insert']
export type RankingInsert = Database['public']['Tables']['rankings']['Insert']
export type RankingItemInsert = Database['public']['Tables']['ranking_items']['Insert']
export type FollowInsert = Database['public']['Tables']['follows']['Insert']
export type RankingLikeInsert = Database['public']['Tables']['ranking_likes']['Insert']
export type RankingCommentInsert = Database['public']['Tables']['ranking_comments']['Insert']

// Update types
export type ArtistUpdate = Database['public']['Tables']['artists']['Update']
export type AlbumUpdate = Database['public']['Tables']['albums']['Update']
export type ProfileUpdate = Database['public']['Tables']['profiles']['Update']
export type RankingUpdate = Database['public']['Tables']['rankings']['Update']
export type RankingItemUpdate = Database['public']['Tables']['ranking_items']['Update']
export type FollowUpdate = Database['public']['Tables']['follows']['Update']
export type RankingLikeUpdate = Database['public']['Tables']['ranking_likes']['Update']
export type RankingCommentUpdate = Database['public']['Tables']['ranking_comments']['Update']